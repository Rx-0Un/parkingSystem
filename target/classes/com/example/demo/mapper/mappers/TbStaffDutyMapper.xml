<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.TbStaffDutyMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.entity.TbStaffDuty">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Apr 22 12:38:47 GMT+08:00 2020.
        -->
        <constructor>
            <arg column="staff_duty_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="staff_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="ending_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="starting_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="staff_task_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        </constructor>
    </resultMap>
    <insert id="insert" parameterType="com.example.demo.entity.TbStaffDuty">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Apr 22 12:38:47 GMT+08:00 2020.
        -->
        insert into tb_staff_duty (staff_duty_id, staff_id, ending_time,
        starting_time, staff_task_id)
        values (#{staffDutyId,jdbcType=INTEGER}, #{staffId,jdbcType=INTEGER}, #{endingTime,jdbcType=TIMESTAMP},
        #{startingTime,jdbcType=TIMESTAMP}, #{staffTaskId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.example.demo.entity.TbStaffDuty">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Apr 22 12:38:47 GMT+08:00 2020.
        -->
        insert into tb_staff_duty
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="staffDutyId != null">
                staff_duty_id,
            </if>
            <if test="staffId != null">
                staff_id,
            </if>
            <if test="endingTime != null">
                ending_time,
            </if>
            <if test="startingTime != null">
                starting_time,
            </if>
            <if test="staffTaskId != null">
                staff_task_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="staffDutyId != null">
                #{staffDutyId,jdbcType=INTEGER},
            </if>
            <if test="staffId != null">
                #{staffId,jdbcType=INTEGER},
            </if>
            <if test="endingTime != null">
                #{endingTime,jdbcType=TIMESTAMP},
            </if>
            <if test="startingTime != null">
                #{startingTime,jdbcType=TIMESTAMP},
            </if>
            <if test="staffTaskId != null">
                #{staffTaskId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <insert id="addRowByInfo">
        INSERT INTO test.tb_staff_duty (staff_id, starting_time,staff_task_id)
        VALUES (#{staff_id}, #{date},#{staff_task_id})
    </insert>
    <select id="selectDutyExist" resultType="java.lang.Integer">
        select count(*)
        from (select count(staff_task_id)
        from tb_staff_duty t1
        where ending_time is null
        group by staff_task_id) t2
  </select>
    <update id="updateRowByInfo">
        update tb_staff_duty
        set ending_time=#{date}
        where ending_time is null
  </update>
    <select id="selectStartingTime" resultType="java.lang.String">
        select starting_time
        from  tb_staff_duty
        where ending_time is null
    </select>
    <select id="selectLastRow" resultType="com.example.demo.entity.TbStaffDuty">
        select *
        from tb_staff_duty
        order by starting_time DESC
        limit 1
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select *
        from tb_staff_duty
        <if test="pageNum!=0">
            limit #{pageNum} offset #{page};
        </if>
    </select>
    <select id="selectRowById" resultType="com.example.demo.entity.TbStaffDuty">
        select *
        from tb_staff_duty
        where staff_duty_id=#{staffDutyId}
    </select>
    <select id="selectAllDesc" resultMap="BaseResultMap">
        select *
        from tb_staff_duty
        group by staff_task_id desc
        <if test="pageNum!=0">
            limit #{pageNum} offset #{page};
        </if>
    </select>
</mapper>